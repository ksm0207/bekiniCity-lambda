AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CodePipeline & CodeBuild 자동 생성 (IAM Role 사용)

Parameters:
  GitHubOwner:
    Type: String
    Default: "ksm0207"

  GitHubRepo:
    Type: String
    Default: "bekiniCity-lambda"

  GitHubBranch:
    Type: String
    Default: "dev"

  GitHubOAuthToken:
    Type: AWS::SSM::Parameter
    Default: "/codepipeline/github/token"

  CloudFormationExecutionRoleArn:
    Type: String
    Default: "arn:aws:iam::772776933351:role/CloudFormationExecutionRole"

Resources:
  # 🚀 S3 Bucket (빌드 아티팩트 저장소)
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "cloud-formation-lambda-bucket-${AWS::AccountId}"

  # 🚀 CodeBuild 프로젝트 생성 (자동 빌드)
  LambdaCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: "bekiniCity-lambda"
      ServiceRole: !Ref CloudFormationExecutionRoleArn
      Artifacts:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      BuildSpec: |
        version: 0.2
        phases:
          install:
            runtime-versions:
              python: 3.9
          build:
            commands:
              - echo "Zipping Lambda function..."
              - zip -r lambda_function.zip .
              - mv lambda_function.zip /codebuild/output/
        artifacts:
          files:
            - lambda_function.zip
          discard-paths: yes

  # 🚀 AWS CodePipeline (자동 배포 파이프라인)
  MyCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: LambdaPipelineStack
      RoleArn: !Ref CloudFormationExecutionRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput

        - Name: Build
          Actions:
            - Name: BuildLambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref LambdaCodeBuildProject

        - Name: Deploy
          Actions:
            - Name: DeployLambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: Lambda
                Version: "1"
              Configuration:
                FunctionName: "lambda_function"
                S3Bucket: !Ref PipelineArtifactsBucket
                S3ObjectKey: "lambda_function.zip"
              InputArtifacts:
                - Name: BuildOutput
